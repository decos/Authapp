APLICACIÓN #5: APLICACIÓN CON AUTENTICACIÓN AUTH0

	INICIO DEL PROYECTO
		Recursos: 
		- https://auth0.com
		- https://getbootstrap.com/


	CREANDO LA INTERFAZ DE NUESTRA APLICACIÓN
		
		1. Añadir Bootstrap a nuestra aplicación
			src/index.html

		2. Ir a la pagina de bootstrap y copiar el codigo del *navbar 
			(Navbar text with an inline element)
			- https://getbootstrap.com/docs/4.0/components/navbar/

		3. Crear el directorio components

		4. Dentro del directorio creado, generar un nuevo componente llamado *navbar
			ng g c components/navbar -is
			- Agregamos el selector al componente principal *app.component.html

		5. Generar el componente *home
			ng g c components/home -is

		6. Generar el componente *precios
			ng g c components/precios -is

		7. Generar el componente *protegida
			ng g c components/protegida -is

		8. Crear el fichero de rutas e importarlo en *app.module
			src/app/app.routes.ts

		9. Agregamos el estilo .main-container
			src/styles.css

		10. Agregar routerLink y routerLinkActive
			src/app/components/navbar/navbar.component.html

	
	COMENZANDO CON AUTHO - COMPONENTES Y SERVICIOS

		1. Crear una cuenta con las siguientes configuraciones
			Configuraciones:
				- dabanto
				- personal
				- developer
				- just playing around
			https://auth0.com/

		2. Crear un cliente
			- authapp
			- single page web applications
			- angular2+

		3. Instalar el auth0.js dentro de la aplicación
			- npm install --save auth0-js

		4. Agregar la referencia al fichero *index.html
			<script src="https://cdn.auth0.com/js/auth0/8.8/auth0.min.js"></script>

		5. Crear el fichero *AuthService (servicio)
			ng g s services/auth
			
		6. Importar el servicio al modulo del componente principal
			 src/app/app.module.ts
		
		7. Copiar el codigo  de la web a de auth0 en el fichero *auth.service.ts
		
		8. Importar el servicio en el componente *navbar, añadirlo como parametro
			en el constructor y crear el metodo *login
		
		9. Crear un boton en la vista del *navbar que llame a la funcion *login

		10. Realizar las siguientes configuraciones en el cliente:
			- Allowed Callback URLs : http://localhost:4200/callback

		11. LOG IN WITH GOOGLE


	CONFIGURACIONES EN AUTH0 DASHBOARD Y USO DEL SERVICIO

		1. Agregar metodos adicionales, desde la pagina web, a nuestro servicio

			- handleAuthentication : establece que vamos a usar el servicio
			- setSession : grabar en el localstorage variables que vienen 
				en el servicio
			- logout : salir, elimina variables del localstorage y navega al home
			- isAuthenticated : saber cuando el usuario esta autenticado o no

		2. Agregar el boton *Salir en la vista del navbar y añadir condicionales
			para definir que boton mostrar dependiendo si esta AUTENTICADO o no

		3. Añadir la siguiente linea en el contructor del componente navbar
			- auth.handleAuthentication();
		
		4. Añadir el metodo *salir al componente *navbar


	SERVICIO DE BLOQUEO CanActivate - AuthGuard

		- Implementar medida de seguridad para que el usuario no pueda entrar 
			a la vista PROTEGIDA aunque el usuario conosca la ruta

		1. Añadir al enlace *Portegida, vista del navbar lo siguiente:
			*ngIf="!auth.isAuthenticated()"

		2. Crear el servicio *authGuard
			ng g s services/authGuard

		3. Importar el servicio al modulo principal y añadirlo en providers

		4. Importar en el servicio lo siguiente:
			- import { Router, 
				ActivatedRouteSnapshot,
				RouterStateSnapshot,
				CanActivate
			      } from "@angular/router";

			- Para ver si la persona esta autenticada
				import { AuthService } from '../auth/auth.service';

		5. Codear el servicio *AuthGuardService

		6. Importar el servicio *AuthGuardService  en el fichero *app.routes
			y añadir el campo *canActivate junto con el servicio (valor)
			en la ruta *Protegida

		7. Tratar de ingresar sin estar autenticado:
			http://localhost:4200/protegida


	OBTENIENDO EL PERFIL DEL USUARIO QUE INICIO SESION
		
		- En la documentacion de Auth0 podemos encontrar lo siguiente:
			https://auth0.com/docs/quickstart/spa/angular2/02-user-profile

		1. En el servicio *AuthService, añadir al *scope la palabra *profile
			src/app/services/auth/auth.service.ts

		2. Añadir un metodo llamado *getProfile y una propiedad llamada *userProfile
			de tipo any al servicio antes mencionado

		3. Codear el componente *Protegida

		4. Codear en la vista del componente *Protegida lo que nos devuelve en json


	PERSONALIZANDO EL LOGIN Y OTRAS OPCIONES

		- Ir a la siguiente ruta:
			https://manage.auth0.com/#/login_page

		1. Modificar lo siguiente:
			- <title>Bienvenido</title>
			- language: 'es',
			- primaryColor:    'green'
			

		- Diferentes tipos de logins
			https://manage.auth0.com/#/connections/social

		- Documentacion de todas las opciones que puedes poner en el LOG IN
			https://auth0.com/docs/libraries/lock/v10/customization
	
	



















